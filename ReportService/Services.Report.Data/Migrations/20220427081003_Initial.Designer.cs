// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Services.Report.Data;

#nullable disable

namespace Services.Report.Data.Migrations
{
    [DbContext(typeof(ReportDbContext))]
    [Migration("20220427081003_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Services.Report.Model.OrderCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Adress")
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .HasColumnType("text");

                    b.Property<int>("TaxNumber")
                        .HasColumnType("integer");

                    b.Property<string>("TaxOffice")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OrderCustomer");
                });

            modelBuilder.Entity("Services.Report.Model.OrderProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<string>("ProductCode")
                        .HasColumnType("text");

                    b.Property<string>("ProductName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("Services.Report.Model.OrderStatusReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("OrderStatus")
                        .HasColumnType("boolean");

                    b.Property<int>("ReportStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ContactReports");
                });

            modelBuilder.Entity("Services.Report.Model.OrderStatusReportDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("integer");

                    b.Property<Guid>("OrderStatusReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderStatusReportId");

                    b.ToTable("ContactReportDetails");
                });

            modelBuilder.Entity("Services.Report.Model.OrderStatusReportDetailItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrderDetailItemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("OrderStatusReportDetailId")
                        .HasColumnType("uuid");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("OrderStatusReportDetailId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderStatusReportDetailItem");
                });

            modelBuilder.Entity("Services.Report.Model.OrderStatusReportDetail", b =>
                {
                    b.HasOne("Services.Report.Model.OrderCustomer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Services.Report.Model.OrderStatusReport", "OrderStatusReport")
                        .WithMany("OrderStatusReportDetails")
                        .HasForeignKey("OrderStatusReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("OrderStatusReport");
                });

            modelBuilder.Entity("Services.Report.Model.OrderStatusReportDetailItem", b =>
                {
                    b.HasOne("Services.Report.Model.OrderStatusReportDetail", "OrderStatusReportDetail")
                        .WithMany("OrderStatusReportDetailItems")
                        .HasForeignKey("OrderStatusReportDetailId");

                    b.HasOne("Services.Report.Model.OrderProduct", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("OrderStatusReportDetail");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Services.Report.Model.OrderStatusReport", b =>
                {
                    b.Navigation("OrderStatusReportDetails");
                });

            modelBuilder.Entity("Services.Report.Model.OrderStatusReportDetail", b =>
                {
                    b.Navigation("OrderStatusReportDetailItems");
                });
#pragma warning restore 612, 618
        }
    }
}
